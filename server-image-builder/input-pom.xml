<?xml version="1.0" encoding="UTF-8"?>
<!--
  ~ JBoss, Home of Professional Open Source.
  ~ Copyright 2022 Red Hat, Inc., and individual contributors
  ~ as indicated by the @author tags.
  ~
  ~ Licensed under the Apache License, Version 2.0 (the "License");
  ~ you may not use this file except in compliance with the License.
  ~ You may obtain a copy of the License at
  ~
  ~     http://www.apache.org/licenses/LICENSE-2.0
  ~
  ~ Unless required by applicable law or agreed to in writing, software
  ~ distributed under the License is distributed on an "AS IS" BASIS,
  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  ~ See the License for the specific language governing permissions and
  ~ limitations under the License.
  -->

<!--
TODO - the parser can't deal with the namespaced attributes. Figure that out if it turns out to be important.
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
-->
<project xmlns="http://maven.apache.org/POM/4.0.0">
    <modelVersion>4.0.0</modelVersion>

    <parent>
        <groupId>org.jboss</groupId>
        <artifactId>jboss-parent</artifactId>
        <version>37</version>
    </parent>
    <groupId>org.wildfly.managed-server-builder</groupId>
    <artifactId>wildfly-managed-server-builder-tool</artifactId>
    <packaging>pom</packaging>

    <properties>
        <!-- Image creation properties -->
        <image.name.wildfly.runtime>quay.io/wildfly-snapshots/wildfly-runtime-jdk11-multi-arch:latest</image.name.wildfly.runtime>

        <!-- Feature pack versions -->
        <version.wildfly.cloud.galleon.pack>2.0.0.Alpha4</version.wildfly.cloud.galleon.pack>
        <version.wildfly.datasources.galleon.pack>2.2.4.Final</version.wildfly.datasources.galleon.pack>

        <!-- Plugin versions -->
        <version.io.fabric8.docker-maven-plugin>0.39.0</version.io.fabric8.docker-maven-plugin>
        <version.org.wildfly.plugins.wildfly-maven-plugin>4.0.0.Beta3</version.org.wildfly.plugins.wildfly-maven-plugin>
        <version.org.apache.maven.plugins.maven-resource-plugin>3.2.0</version.org.apache.maven.plugins.maven-resource-plugin>

        <!-- This property will be used for the location of the cloud galleon pack if the tool decides it needs to add it -->
        <wildfly.datasources.galleon.pack.location>org.wildfly:wildfly-datasources-preview-galleon-pack:${version.wildfly.datasources.galleon.pack}</wildfly.datasources.galleon.pack.location>

        <!-- Misc. -->
        <maven.compiler.source>11</maven.compiler.source>
        <maven.compiler.target>11</maven.compiler.target>

        <!-- 'Constants' -->
        <server.config.init.dir>target/server/standalone/configuration/init</server.config.init.dir>

        <!-- TODO Make these configurable in the server-config.xml -->
        <plugin.fork.embedded>true</plugin.fork.embedded>
        <!--
            Downloads the latest WildFly Galleon feature pack.
            Alternative formats when specifying version:
                org.wildfly:wildfly-galleon-pack:26.0.0.Final, or
                wildfly@maven(org.jboss.universe:community-universe):current#26.0.0.Final
        -->
        <!--<wildfly.feature-pack.location>wildfly@maven(org.jboss.universe:community-universe)</wildfly.feature-pack.location>-->
        <wildfly.feature-pack.location>org.wildfly:wildfly-galleon-pack:27.0.0.Alpha4</wildfly.feature-pack.location>
    </properties>
    <build>
        <pluginManagement>
            <plugins>
                <plugin>
                    <groupId>org.wildfly.plugins</groupId>
                    <artifactId>wildfly-maven-plugin</artifactId>
                    <version>${version.org.wildfly.plugins.wildfly-maven-plugin}</version>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-resources-plugin</artifactId>
                    <version>${version.org.apache.maven.plugins.maven-resource-plugin}</version>
                </plugin>
                <plugin>
                    <groupId>io.fabric8</groupId>
                    <artifactId>docker-maven-plugin</artifactId>
                    <version>${version.io.fabric8.docker-maven-plugin}</version>
                </plugin>
            </plugins>
        </pluginManagement>
        <plugins>
            <plugin>
                <groupId>org.wildfly.plugins</groupId>
                <artifactId>wildfly-maven-plugin</artifactId>
                <configuration>
                    <!-- Only relavant if we want to update the provisioned server -->
                    <record-provisioning-state>false</record-provisioning-state>
                    <feature-packs>
                        <feature-pack>
                            <location>${wildfly.feature-pack.location}</location>
                        </feature-pack>
                        <feature-pack>
                            <location>org.wildfly.cloud:wildfly-cloud-galleon-pack:${version.wildfly.cloud.galleon.pack}</location>
                        </feature-pack>

                        <?DATASOURCES_FEATURE_PACK?>
                    </feature-packs>
                    <?MAVEN_PLUGIN_LAYERS?>
                    <galleon-options>
                        <jboss-fork-embedded>${plugin.fork.embedded}</jboss-fork-embedded>
                    </galleon-options>
                </configuration>
                <executions>
                    <execution>
                        <id>provision-base-cloud-server</id>
                        <phase>process-resources</phase>
                        <goals>
                            <goal>package</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-resources-plugin</artifactId>
                <executions>
                    <execution>
                        <id>copy-deployment</id>
                        <phase>process-resources</phase>
                        <goals>
                            <goal>copy-resources</goal>
                        </goals>
                        <configuration>
                            <outputDirectory>target/server/standalone/deployments</outputDirectory>
                            <resources>
                                <resource>
                                    <directory>files</directory>
                                    <includes>
                                        <include>ROOT.war</include>
                                    </includes>
                                </resource>
                            </resources>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>io.fabric8</groupId>
                <artifactId>docker-maven-plugin</artifactId>
                <executions>
                    <execution>
                        <id>build-server</id>
                        <phase>process-classes</phase>
                        <goals>
                            <goal>build</goal>
                        </goals>
                        <configuration>
                            <images>
                                <image>
                                    <name>wildfly-cloud-test-image/${project.name}:latest</name>
                                    <alias>server</alias>
                                    <build>
                                        <from>${image.name.wildfly.runtime}</from>
                                        <env>
                                            <?DOCKER_PLUGIN_ENV_VARS?>
                                        </env>
                                        <assemblies>
                                            <assembly>
                                                <name>copy-server</name>
                                                <mode>dir</mode>
                                                <user>jboss:root</user>
                                                <targetDir>/opt/server</targetDir>
                                                <inline>
                                                    <formats>
                                                        <format>dir</format>
                                                    </formats>
                                                    <fileSets>
                                                        <fileSet>
                                                            <directory>target/server</directory>
                                                            <outputDirectory>/</outputDirectory>
                                                            <includes>
                                                                <include>**</include>
                                                            </includes>
                                                        </fileSet>
                                                    </fileSets>
                                                </inline>
                                            </assembly>
                                        </assemblies>
                                    </build>
                                </image>
                            </images>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>
    <profiles>
        <profile>
            <!--
                Copies across the server-init.cli extracted from the deployment if there was one.
                The tool will set an env var in the image if this was present.
            -->
            <id>copy-init-cli-if-exists</id>
            <activation>
                <file>
                    <exists>files/server-init.cli</exists>
                </file>
            </activation>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-resources-plugin</artifactId>
                        <executions>
                            <execution>
                                <id>copy-server-init.cli</id>
                                <phase>process-resources</phase>
                                <goals>
                                    <goal>copy-resources</goal>
                                </goals>
                                <configuration>
                                    <outputDirectory>${server.config.init.dir}</outputDirectory>
                                    <resources>
                                        <resource>
                                            <directory>files</directory>
                                            <includes>
                                                <include>server-init.cli</include>
                                            </includes>
                                        </resource>
                                    </resources>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
        <profile>
            <!--
                Copies across the server-init.yml extracted from the deployment if there was one.
            -->
            <id>copy-init-yml-if-exists</id>
            <activation>
                <file>
                    <exists>files/server-init.yml</exists>
                </file>
            </activation>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-resources-plugin</artifactId>
                        <executions>
                            <execution>
                                <id>copy-server-init.yml</id>
                                <phase>process-resources</phase>
                                <goals>
                                    <goal>copy-resources</goal>
                                </goals>
                                <configuration>
                                    <outputDirectory>${server.config.init.dir}</outputDirectory>
                                    <resources>
                                        <resource>
                                            <directory>files</directory>
                                            <includes>
                                                <include>server-init.yml</include>
                                            </includes>
                                        </resource>
                                    </resources>
                                </configuration>
                            </execution>
                            <execution>
                                <id>copy-yaml-service-loader.yml</id>
                                <phase>process-resources</phase>
                                <goals>
                                    <goal>copy-resources</goal>
                                </goals>
                                <configuration>
                                    <outputDirectory>target/server/modules/system/layers/base/org/jboss/as/controller/main/dir/META-INF/services/</outputDirectory>
                                    <resources>
                                        <resource>
                                            <directory>files</directory>
                                            <includes>
                                                <include>org.jboss.as.controller.persistence.ConfigurationExtension</include>
                                            </includes>
                                        </resource>
                                    </resources>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
    </profiles>
</project>